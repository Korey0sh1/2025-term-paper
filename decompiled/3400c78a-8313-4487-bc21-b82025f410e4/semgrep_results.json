{"version":"1.114.0","results":[{"check_id":"rules.c-stack-overflow-risk","path":"decompiled/3400c78a-8313-4487-bc21-b82025f410e4/output.c","start":{"line":70,"col":12,"offset":1796},"end":{"line":70,"col":29,"offset":1813},"extra":{"metavars":{"$DST":{"start":{"line":70,"col":19,"offset":1803},"end":{"line":70,"col":23,"offset":1807},"abstract_content":"dest"},"$SRC":{"start":{"line":70,"col":25,"offset":1809},"end":{"line":70,"col":28,"offset":1812},"abstract_content":"src"}},"message":"Detected use of unsafe function that may cause stack-based buffer overflow.\nConsider using safer alternatives like fgets, strncpy, strncat, snprintf, etc.\n","metadata":{"cwe":["CWE-121: Stack-based Buffer Overflow"],"owasp":["A03:2021 - Injection"],"category":"security","technology":["c"],"confidence":"HIGH","likelihood":"HIGH","impact":"HIGH","cwe2022-top25":true,"subcategory":["audit"],"license":"Semgrep Rules License v1.0","vulnerability_class":["Buffer Overflow"]},"severity":"ERROR","fingerprint":"785fa6586c75fac866bba3d2caaa1b85954eb394bbe98996fb0b06648b5966b6fcbad58ff7a01df10c60b1bd342af75fecc0b66cceb8deb3f725359f5ca42ca3_0","lines":"    return strcpy(dest, src);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"rules.c-stack-overflow-risk","path":"decompiled/3400c78a-8313-4487-bc21-b82025f410e4/output.c","start":{"line":149,"col":5,"offset":3596},"end":{"line":149,"col":38,"offset":3629},"extra":{"metavars":{"$DST":{"start":{"line":149,"col":12,"offset":3603},"end":{"line":149,"col":23,"offset":3614},"abstract_content":"(char*mem"},"$SRC":{"start":{"line":149,"col":25,"offset":3616},"end":{"line":149,"col":37,"offset":3628},"abstract_content":"(char*&buf"}},"message":"Detected use of unsafe function that may cause stack-based buffer overflow.\nConsider using safer alternatives like fgets, strncpy, strncat, snprintf, etc.\n","metadata":{"cwe":["CWE-121: Stack-based Buffer Overflow"],"owasp":["A03:2021 - Injection"],"category":"security","technology":["c"],"confidence":"HIGH","likelihood":"HIGH","impact":"HIGH","cwe2022-top25":true,"subcategory":["audit"],"license":"Semgrep Rules License v1.0","vulnerability_class":["Buffer Overflow"]},"severity":"ERROR","fingerprint":"0a19a3351ce57a8b868f4d4cb9cadf408580b9e9c8d95b2ba3ac1b651cd0c127d57cf28db6e3b312bae9096e0cdf9c6c50528ba6379658f1bd696465a170936f_0","lines":"    strcpy((char *)mem, (char *)&buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"rules.double-free","path":"decompiled/3400c78a-8313-4487-bc21-b82025f410e4/output.c","start":{"line":150,"col":5,"offset":3635},"end":{"line":151,"col":15,"offset":3660},"extra":{"metavars":{"$VAR":{"start":{"line":150,"col":10,"offset":3640},"end":{"line":150,"col":13,"offset":3643},"abstract_content":"mem","propagated_value":{"svalue_start":{"line":148,"col":21,"offset":3570},"svalue_end":{"line":148,"col":31,"offset":3580},"svalue_abstract_content":"malloc(64)"}}},"message":"Detected possible double free.\nFreeing the same memory twice (directly or through alias) can lead to undefined behavior or security vulnerabilities.\n","metadata":{"cwe":["CWE-415: Double Free"],"category":"security","confidence":"MEDIUM","likelihood":"HIGH","impact":"HIGH","cwe2022-top25":true,"license":"Semgrep Rules License v1.0","vulnerability_class":["Double Free"]},"severity":"ERROR","fingerprint":"d74725f6acb786ae24993c233a6f6109cc6d2844a1b5aa54669714298acd2b2af12885d5d606be4f05af8d0babc904814f2c3584aae53051a64dbb3b6bf285e4_0","lines":"    free(mem);\n    free(mem);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[],"paths":{"scanned":["decompiled/3400c78a-8313-4487-bc21-b82025f410e4/output.c"]},"interfile_languages_used":[],"skipped_rules":[]}